plugins {
    id "java-library"
    id 'java-test-fixtures'
    id "org.jetbrains.kotlin.jvm" version "${kotlinVersion}"

    id "org.jetbrains.kotlin.plugin.spring" version "${kotlinVersion}"
    id "org.springframework.boot" version "${springBootVersion}"
    id "io.spring.dependency-management" version "${springDependencyVersion}"
}

allprojects {
    apply {
        from "$rootDir/base.gradle"
    }

    dependencies {
        implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core")
        implementation("org.jetbrains.kotlin:kotlin-reflect")
        implementation("com.fasterxml.jackson.module:jackson-module-kotlin:2.17.+")
        implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
        implementation("org.springframework.boot:spring-boot-starter")
        implementation("org.springframework.boot:spring-boot-starter-actuator")
        // Resilience4j
        implementation("io.github.resilience4j:resilience4j-spring-boot3:${resilience4jVersion}")

        testImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test")
        testImplementation("org.springframework.boot:spring-boot-starter-test")
        testImplementation("org.springframework.boot:spring-boot-testcontainers")
        testImplementation("org.testcontainers:junit-jupiter")
        testImplementation("io.kotest:kotest-runner-junit5:${kotestVersion}")
        testImplementation("io.kotest:kotest-assertions-core:${kotestVersion}")
        testImplementation("io.kotest:kotest-property:${kotestVersion}")
        testImplementation platform("org.junit:junit-bom:${junitBomVersion}")
        testImplementation("org.junit.jupiter:junit-jupiter")
        testImplementation("io.mockk:mockk:${mockkVersion}")

        testFixturesApi("org.testcontainers:junit-jupiter")
        testFixturesApi("org.springframework.boot:spring-boot-starter-test")
    }

    test {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
            exceptionFormat "full"
            showCauses true
            showExceptions true
        }
    }
}

bootJar {
    enabled false
}